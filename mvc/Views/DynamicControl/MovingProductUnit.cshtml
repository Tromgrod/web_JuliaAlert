@model Dictionary<long, LIB.Tools.BO.ItemBase>
@using JuliaAlert.Models.Objects
@using LIB.Tools.Security
@using LIB.BusinessObjects
@using LIB.Tools.Utils
@{
    Layout = "~/Views/Master/_Ajax.cshtml";

    var currentUser = Authentication.GetCurrentUser();

    bool productionAccess = currentUser.HasAtLeastOnePermission((long)BasePermissionenum.Production);

    long movingProductId = Convert.ToInt64(Request.Form["ParentId"]);

    var stocksAccess = Stock.GetStocksByUser();
}
<div class="edit-section-table">
    <div class="edit-section-table-header">
        <div class="edit-section-table-title">Название</div>
        <div class="edit-section-table-title">Код</div>
        <div class="edit-section-table-title">Цвет</div>
        <div class="edit-section-table-title">Размер</div>
        <div class="edit-section-table-title">Из склада</div>
        <div class="edit-section-table-title">Остаток</div>
        <div class="edit-section-table-title">В склад</div>
        <div class="edit-section-table-title">Остаток</div>
        <div class="edit-section-table-title">Кол-во</div>
        <div class="edit-section-table-title"></div>
    </div>

    <div class="edit-section-table-row edit-section-table-add">
        <input type="hidden" dontAutoClear name="Id" value="0">
        <input type="hidden" dontAutoClear name="MovingProduct" value="@movingProductId">

        <div class="edit-section-table-content">
            <div class="input-row" style="position: relative;">
                <input type="text" name="UniqueProduct_autocomplete" class="input autocomplete-input ui-autocomplete-input" onchange="set_UniqueProduct_data_dynamic(this)" data-namespace="JuliaAlert.Models.Objects.UniqueProduct" data-classname="UniqueProduct" data-autocompleteminlen="0" data-autocompletename="UniqueProduct" data-autocomplete-server="1" autocomplete="off">
                <input type="hidden" class="hidden-autocomplete-input" name="UniqueProduct">
                <a onclick="clear_autocomplete_dynamic(this)" class="clear-link"></a>
            </div>
        </div>

        <div class="edit-section-table-content">
            <div class="input-row">
                <input type="text" name="Code" class="input midle-input-table" disabled>
            </div>
        </div>

        <div class="edit-section-table-content">
            <div class="input-row">
                <input type="text" name="ColorProduct_Name" class="input midle-input-table" disabled>
            </div>
            <input type="hidden" name="ColorProduct">
        </div>

        <div class="edit-section-table-content">
            <div class="input-row">
                <select name="ProductSize" class="select dynamic-select" data-req="1" data-req-mess="Заполните поле"></select>
            </div>
        </div>

        <div class="edit-section-table-content">
            <div class="input-row">
                <select name="StockFrom" class="select" data-req="1" data-req-mess="Заполните поле" onchange="stock_change(this)">
                    <option value=""></option>
                    @foreach (var item in stocksAccess.Values)
                    {
                        <option value="@item.Id">@item.GetName()</option>
                    }
                </select>
            </div>
        </div>

        <div class="edit-section-table-content">
            <div class="input-row">
                <input type="number" class="input decimal-input small-input-table" step="any" disabled>
            </div>
        </div>

        <div class="edit-section-table-content">
            <div class="input-row">
                <select name="StockTo" class="select" data-req="1" data-req-mess="Заполните поле" onchange="stock_change(this)">
                    <option value=""></option>
                    @foreach (var item in stocksAccess.Values)
                    {
                        <option value="@item.Id">@item.GetName()</option>
                    }
                </select>
            </div>
        </div>

        <div class="edit-section-table-content">
            <div class="input-row">
                <input type="number" class="input decimal-input small-input-table" step="any" disabled>
            </div>
        </div>

        <div class="edit-section-table-content">
            <div class="input-row">
                <input type="number" name="Count" class="input decimal-input small-input-table" step="any">
            </div>
        </div>

        <div class="edit-section-table-content edit-section-table-content-controls">
            <div class="dynamic-btn-conainer">
                <a title="Сохранить" class="control-save" onclick="save_Dynamic(this, @movingProductId, '@typeof(MovingProductUnit).FullName')"></a>
            </div>
        </div>

    </div>

    @foreach (MovingProductUnit movingProductUnit in Model.Values)
    {
        <div class="edit-section-table-row">
            <input type="hidden" name="MovingProduct" value="@movingProductId">
            <input type="hidden" name="Id" value="@movingProductUnit.Id">

            <div class="edit-section-table-content">
                <div class="input-row">
                    <input type="text" name="UniqueProduct_Name" class="input" value="@movingProductUnit.SpecificProduct.UniqueProduct.GetName()" disabled>
                </div>
                <input type="hidden" name="UniqueProduct" value="@movingProductUnit.SpecificProduct.UniqueProduct.Id">
            </div>

            <div class="edit-section-table-content">
                <div class="input-row">
                    <input type="text" name="Code" class="input midle-input-table" value="@movingProductUnit.SpecificProduct.UniqueProduct.GetCode()" disabled="">
                </div>
            </div>

            <div class="edit-section-table-content">
                <div class="input-row">
                    <input type="text" name="ColorProduct_Name" class="input midle-input-table" value="@movingProductUnit.SpecificProduct.UniqueProduct.ColorProduct.GetName()" disabled="">
                </div>
                <input type="hidden" name="ColorProduct" value="@movingProductUnit.SpecificProduct.UniqueProduct.ColorProduct.Id">
            </div>

            <div class="edit-section-table-content">
                <div class="input-row">
                    <input type="text" name="ProductSize_Name" class="input small-input-table" value="@movingProductUnit.SpecificProduct.ProductSize.GetName()" disabled="">
                </div>
                <input type="hidden" name="ProductSize" value="@movingProductUnit.SpecificProduct.ProductSize.Id">
            </div>

            <div class="edit-section-table-content">
                <div class="input-row">
                    <select name="StockFrom" class="select" data-req="1" data-req-mess="Заполните поле" onchange="stock_change(this)">
                        <option value=""></option>
                        @foreach (var item in stocksAccess.Values)
                        {
                            <option @(item.Id == movingProductUnit.StockFrom.Id ? "selected" : "") value="@item.Id">@item.GetName()</option>
                        }
                    </select>
                </div>
            </div>

            <div class="edit-section-table-content">
                <div class="input-row">
                    <input type="number" class="input decimal-input small-input-table" step="any" value="@movingProductUnit.StockFromCount.ToString()" disabled>
                </div>
            </div>

            <div class="edit-section-table-content">
                <div class="input-row">
                    <select name="StockTo" class="select" data-req="1" data-req-mess="Заполните поле" onchange="stock_change(this)">
                        <option value=""></option>
                        @foreach (var item in stocksAccess.Values)
                        {
                            <option @(item.Id == movingProductUnit.StockTo.Id ? "selected" : "") value="@item.Id">@item.GetName()</option>
                        }
                    </select>
                </div>
            </div>

            <div class="edit-section-table-content">
                <div class="input-row">
                    <input type="number" class="input decimal-input small-input-table" step="any" value="@movingProductUnit.StockToCount.ToString()" disabled>
                </div>
            </div>

            <div class="edit-section-table-content">
                <div class="input-row">
                    <input type="number" name="Count" class="input decimal-input small-input-table" step="any" value="@movingProductUnit.Count">
                </div>
            </div>

            <div class="edit-section-table-content edit-section-table-content-controls">
                <div class="dynamic-btn-conainer">
                    <a title="Сохранить" class="control-save" onclick="save_Dynamic(this, @movingProductId, '@typeof(MovingProductUnit).FullName')"></a>
                    <a title="Удалить" class="control-delete" onclick="delete_Dynamic(this, @movingProductUnit.Id, '@typeof(MovingProductUnit).FullName')"></a>
                    <a title="Печать штрихкода" class="control-print" onclick="open_simple_popup_customData({ BarcodeStr: '@movingProductUnit.SpecificProduct.ProductCode.ToString("00000")', MovingProduct: '@movingProductUnit.MovingProduct.Date.ToString("dd.MM.yyyy")', MaxCount: @movingProductUnit.Count }, '~/Views/BarcodeHelper/PrintCount_EAN13.cshtml')"></a>
                    <a title="Перейти к модели" class="control-link" href="@URLHelper.GetUrl("DocControl/UniqueProduct/" + movingProductUnit.SpecificProduct.UniqueProduct.Id)" target="_blank"></a>
                </div>
            </div>
        </div>
    }
</div>

<script>
    $(".edit-section-table .autocomplete-input").each((i, item) => load_autocomplete(item));
</script>